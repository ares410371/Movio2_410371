apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

def versionMajor = 0
def versionMinor = 9
def versionPatch = 1
def versionBuild = 0

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "cz.muni.fi.pv256.movio2.uco_410371"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode versionMajor * 1000 + versionMinor * 100 + versionPatch * 10 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    //standard gradle naming says almost nothing about your build; this way you can easily distinguish between different builds and versions
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    "$project.name-$variant.name-$variant.versionName-${variant.versionCode}.apk")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            versionNameSuffix "-versionCode"
        }
    }

    buildTypes.each {
        it.buildConfigField "String", "MOVIE_DB_API_KEY", MOVIE_DB_API_KEY
    }

    // second flavor not work
    productFlavors {
        main {

        }
        second {
            applicationIdSuffix "second"
            resValue "string", "name", "Second Movio2_410371"
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-vector-drawable:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"

    compile "com.google.guava:guava:$rootProject.guavaLibraryVersion"

    compile "com.squareup.picasso:picasso:$rootProject.picassoLibraryVersion"

    apt "com.bluelinelabs:logansquare-compiler:$rootProject.logansquareLibraryVersion"
    compile "com.bluelinelabs:logansquare:$rootProject.logansquareLibraryVersion"

    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofit2LibraryVersion"
    compile "com.github.aurae.retrofit2:converter-logansquare:$rootProject.logansquareConverterLibraryVersion"

    testCompile "junit:junit:$rootProject.jUnitLibraryVersion"
    testCompile "org.mockito:mockito-all:$rootProject.mockitoLibraryVersion"
    testCompile "org.hamcrest:hamcrest-all:$rootProject.hamcrestLibraryVersion"
    testCompile "org.powermock:powermock-module-junit4:$rootProject.powerMockitoLibraryVersion"
    testCompile "org.powermock:powermock-api-mockito:$rootProject.powerMockitoLibraryVersion"

    androidTestCompile("com.android.support.test:runner:$rootProject.runnerLibraryVersion") {
        exclude group: 'com.android.support'
    }
    androidTestCompile("com.android.support.test:rules:$rootProject.rulesLibraryVersion") {
        exclude group: 'com.android.support'
    }
    androidTestCompile("com.android.support.test.espresso:espresso-core:$rootProject.espressoLibraryVersion") {
        exclude group: 'com.android.support'
    }
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$rootProject.espressoLibraryVersion") {
        exclude group: 'com.android.support'
    }
}
